{"ast":null,"code":"import _objectSpread from \"/Users/liyiushing/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n;","map":{"version":3,"sources":["/Users/liyiushing/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","signInWithEmail","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AAEA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAKA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACe,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADrB;AAAA,UACOI,IADP,QACOA,IADP;;AAEA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACI,mBAAmB;AAAGa,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAApB,CAAT;AACH,GALD,CAKE,OAAMC,KAAN,EAAa;AACX,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACH;AACJ;AAAA;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAAA;AAED,OAAO,UAAUW,kBAAV,GAA+B;AAClC,QAAMvB,UAAU,CAACI,eAAe,CAACoB,mBAAjB,EAAsCC,eAAtC,CAAhB;AACH;AAAA;AAED,OAAQ,UAAUC,SAAV,GAAsB;AAC1B,QAAMxB,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,CAAD,CAAT;AACH;AAAA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\n\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\n\n\n\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch(error) {\n        yield put(googleSignInFailure(error));\n    }\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n};\n\nexport  function* userSagas() {\n    yield all([call(onGoogleSignInStart)]);\n};"]},"metadata":{},"sourceType":"module"}