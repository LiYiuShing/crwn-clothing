{"ast":null,"code":"import _objectSpread from \"/Users/liyiushing/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; //documentRef.XXXX() -> set, get, update, delete\n\nconst config = {\n  apiKey: \"AIzaSyAR9yHedFgoSjo_RsTLSpHRHQdOXSet3bE\",\n  authDomain: \"crwn-db-b40c1.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-b40c1.firebaseio.com\",\n  projectId: \"crwn-db-b40c1\",\n  storageBucket: \"crwn-db-b40c1.appspot.com\",\n  messagingSenderId: \"1070936331277\",\n  appId: \"1:1070936331277:web:8a21f7f10a19b6b8707144\",\n  measurementId: \"G-WCCBLQJ0E1\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      //create user\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc(obj.title);\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n}; //Mapping Firebase collection\n\nconst convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase())\n    };\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/liyiushing/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","collection","snapShot","get","collectionSnapshot","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","batch","forEach","obj","newDocRef","title","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","items","routeName","encodeURI","toLowerCase","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n//documentRef.XXXX() -> set, get, update, delete\n\nconst config = {\n    apiKey: \"AIzaSyAR9yHedFgoSjo_RsTLSpHRHQdOXSet3bE\",\n    authDomain: \"crwn-db-b40c1.firebaseapp.com\",\n    databaseURL: \"https://crwn-db-b40c1.firebaseio.com\",\n    projectId: \"crwn-db-b40c1\",\n    storageBucket: \"crwn-db-b40c1.appspot.com\",\n    messagingSenderId: \"1070936331277\",\n    appId: \"1:1070936331277:web:8a21f7f10a19b6b8707144\",\n    measurementId: \"G-WCCBLQJ0E1\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const collectionRef = firestore.collection('users');\n\n    const snapShot = await userRef.get();\n    const collectionSnapshot = await collectionRef.get();\n\n    if(!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            //create user\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch (error) {\n            console.log('error creating user', error.message );\n        }\n    }\n\n    return userRef;\n}\n\nfirebase.initializeApp(config);\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc(obj.title);\n        batch.set(newDocRef, obj);\n    });\n\n    return await batch.commit()\n};\n\n//Mapping Firebase collection\nconst convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map(doc => {\n        const { title, items } = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            \n        }\n    })\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}