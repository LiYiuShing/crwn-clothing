{"ast":null,"code":"var _jsxFileName = \"/Users/liyiushing/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collection');\n    fetch('https://firestore.googleapis.com/v1/projects/crwn-db-b40c1/databases/(default)/documents/collection').then(response => response.json()).then(collection => console);\n    /*\n    collectionRef.get().then(snapshot => {)\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        this.setState({ loading: false });\n    })\n    */\n\n    /*\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        this.setState({ loading: false });\n    });\n    */\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/liyiushing/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","console","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,mBAAD,CAAjD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAAA,UACRT,iBADQ,GACc,KAAKU,KADnB,CACRV,iBADQ;AAEhB,UAAMW,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,YAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,qGAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMF,UAAU,IAAIK,OAFpB;AAKA;;;;;;;;AAQA;;;;;;;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKT,KADlB,CACGS,KADH;AAAA,UAEGZ,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAEV,KAAK,IAC7C,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEV,KAAK,IACrD,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAYH;;AAhDkC;;AAmDvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCtB,EAAAA,iBAAiB,EAAEuB,cAAc,IAC7BD,QAAQ,CAACtB,iBAAiB,CAACuB,cAAD,CAAlB;AAFwB,CAAL,CAAnC;;AAKA,eAAe5B,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n    state = {\n        loading: true\n    };\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collection');\n\n        fetch('https://firestore.googleapis.com/v1/projects/crwn-db-b40c1/databases/(default)/documents/collection')\n        .then(response => response.json())\n        .then(collection => console)\n\n\n        /*\n        collectionRef.get().then(snapshot => {)\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap);\n            this.setState({ loading: false });\n        })\n        */\n\n        /*\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionsMap);\n            this.setState({ loading: false });\n        });\n        */\n    }\n\n    render() {\n        const { match } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={props => (\n                    <CollectionOverviewWithSpinner isLoading={loading} {...props} />\n                )}    \n                />\n                <Route path={`${match.path}/:collectionId`} render={props => (\n                    <CollectionPageWithSpinner isLoading={loading} {...props} />\n                )}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => \n        dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}