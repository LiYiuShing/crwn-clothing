{"ast":null,"code":"import _objectSpread from \"/Users/liyiushing/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n\n  ;\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n\n  ;\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n\n  ;\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n;\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}\n;","map":{"version":3,"sources":["/Users/liyiushing/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","signOut","error","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","user","isUserAuthenticated","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\n\nimport {\n    auth,\n    googleProvider,\n    createUserProfileDocument,\n    getCurrentUser\n} from '../../firebase/firebase.utils';\n\nexport function* signOut() {\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    } catch(error) {\n        yield put(signOutFailure(error))\n    }\n}\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch(error) {\n        yield put(signInFailure(error));\n    };\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error));\n    };\n};\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth)\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n};\n\nexport function* signInWithEmail({payload: { email, password }}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error));\n    };\n};\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n};\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}; \n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart), \n        call(onEmailSignInStart), \n        call(isUserAuthenticated),\n        call(onSignOutStart)\n    ]);\n};\n"]},"metadata":{},"sourceType":"module"}