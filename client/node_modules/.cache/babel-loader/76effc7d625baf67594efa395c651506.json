{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop/shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collection');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {}\n  /*\n      collectionRef\n          .get()\n          .then(snapshot => {\n              const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n              dispatch(fetchCollectionsSuccess(collectionsMap));\n          })\n          .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  */\n\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;","map":{"version":3,"sources":["/Users/liyiushing/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAUA,SAAV,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,qBAAjE;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,YAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACH,GAJD,CAIE,OAAOG,KAAP,EAAc,CAEf;AAED;;;;;;;;;;AASH;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,SAAS,CACXO,eAAe,CAACW,uBADL,EAEXV,qBAFW,CAAf;AAIH;AAAA","sourcesContent":["import  { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop/shop.actions'\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log('I am fired');\n\n    try {\n        const collectionRef = firestore.collection('collection');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    } catch (error) {\n\n    }\n\n    /*\n        collectionRef\n            .get()\n            .then(snapshot => {\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n                dispatch(fetchCollectionsSuccess(collectionsMap));\n            })\n            .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    */\n};\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n};"]},"metadata":{},"sourceType":"module"}